PLEASE MAKE SURE to type "yay -Syu" for a full system upgrade before installing any of these packages!

VIM:
yay -S gvim
https://vim.fandom.com/wiki/Copy,_cut_and_paste

Screenshots:
yay -S spectacle
https://www.archlinuxuser.com/2017/09/take-screenshot-on-plasmakde-desktop-in.html

# bluetooth install

kde-plasma friendly: https://linuxhint.com/bluetooth_arch_linux/
sudo systemctl X bluetooth.service, where X can be enable, start, restart, stop, disable
sudo vim /etc/bluetoooth/main.conf and go all the way down and change autoenable = true
if using something like airpods, change ControllerMode=bredr


yay -S bluez bluez-utils
if using pulseaudio, then instead type yay -S bluez bluez-utils pulseaudio-bluetooth

removing btusb and reloading it:
sudo rmmod btusb && sudo modprobe btusb


vs code:
https://linuxhint.com/install_visual_studio_code_arch_linux/

yay
yay -S asusctl

systemctl start asusd
# cycle between backlight modes
asusctl -n
https://www.reddit.com/r/ZephyrusG14/comments/or7sfy/yet_another_guide_to_configuring_linux_on_g14/

language input:
https://slmeng.medium.com/how-to-install-chinese-fonts-and-input-method-in-arch-linux-18b68d2817e7
https://www.youtube.com/watch?v=a1J0Z9j4YHU
https://www.youtube.com/watch?v=poXvZt9iBV0
yay -S ibus ibus-pinyin ibus-googlepinyin ibus-libpinyin

simplified chinese input fonts:
yay -S adobe-source-han-sans-cn-fonts adobe-source-han-serif-cn-fonts

input framework: https://wiki.archlinux.org/title/IBus
https://www.youtube.com/watch?v=WDoyOSRPEtc


fcitx if not using ibus:
https://www.youtube.com/watch?v=8XDmLr6wb4M
yay -S fcitx5-im

yay -S fcitx5 fcitx5-qt fcitx5-gtk fcitx5-chinese-addons
then add these three lines to .bash_profile:
XMODIFIERS=@im=fcitx
GTK_IM_MODULE=fcitx
QT_IM_MODULE=fcitx

then install an engine package such as fcitx5-configtool:
yay -S fcitx5-configtool

install some fonts:
yay -S noto-fonts noto-fonts-cjk

uncomment chinese in the locale.gen file


5 linux terminal apps you need to have:
https://www.youtube.com/watch?v=E7Ww38z_27A

installing a customizable terminal:
yay -S tilix
https://gnunn1.github.io/tilix-web/manual/vteconfig/

power management for kde plasma:
https://superuser.com/questions/1531050/no-brightness-control-in-kde
yay -S powerdevil

miniconda:
https://towardsdatascience.com/real-world-website-visitor-forecast-with-facebook-prophet-a-complete-tutorial-8d135b848c5e
https://docs.conda.io/projects/conda/en/4.6.0/_downloads/52a95608c49671267e40c689e0bc00ca/conda-cheatsheet.pdf

yay -S miniconda3 && /home/leo_zhang/Documents/GitHub/my_linux_configs/python_configs/envs/web_auto

If your shell is Bash or a Bourne variant, enable conda for the current user with

    $ echo "[ -f /opt/miniconda3/etc/profile.d/conda.sh ] && source /opt/miniconda3/etc/profile.d/conda.sh" >> ~/.bashrc

or, for all users, enable conda with

    $ sudo ln -s /opt/miniconda3/etc/profile.d/conda.sh /etc/profile.d/conda.sh

source .bashrc

conda create -n web_auto python=3.9 && yay -S --needed python-pip && conda activate web_auto && pip install -r /home/leo_zhang/Documents/GitHub/my_linux_configs/python_configs/envs/web_auto/web_auto.txt
conda create -n time_series python=3.8 && conda activate time_series && pip install -r /home/leo_zhang/Documents/GitHub/my_linux_configs/python_configs/envs/time_series/time_series.txt
https://facebook.github.io/prophet/docs/installation.html#python
conda install gcc && conda install -c conda-forge prophet

flutter:
I recommend installing flutter from their website rather than from AUR
https://docs.flutter.dev/get-started/install/linux
Then find the bin folder inside the folder that was extracted from the tar file and add it to your env path (i.e. in my case, it is: export PATH="$PATH:/home/leo_zhang/flutter/bin/")

tar -xvf [flutter_tar_file]
mkdir ~/.flutter_dir
# move to this hidden folder in your home directory (or where ever you want)
mv flutter ~/.flutter_dir
# once you've added flutter to your path (for example: export PATH="$PATH:/home/leo_zhang/.flutter_dir/flutter/bin/"), save and get out .bashrc and type:
source .bashrc
# now if you type "which flutter", you should see the terminal recognizing it now.

On Arch Linux, the executive file of the proprietary version of google chrome has the name google-chrome-stable, but flutter tries to find exactly google-chrome. Therefore, setting the environment variable for /usr/bin/google-chrome-stable has no effect.
Therefore, to solve the problem, you need to create a link to google-chrome-stable with the name google-chrome using the command sudo ln -s /usr/bin/google-chrome-stable /usr/local/bin/google-chrome

linux desktop toolchain:
yay -S --needed clang cmake ninja pkgconf gtk3

android-sdk setup:
I found this post: https://stackoverflow.com/questions/55143884/not-able-to-execute-sdk-manager-commands-from-command-line-android

And so I had to comment or delete this line out: export JAVA_OPTS='-XX:+IgnoreUnrecognizedVMOptions --add-modules java.se.ee'from my .bashrc

all I needed to install from aur was android-sdk-cmdline-tools-latest (pick jdk 8 instead of the default openjdk (not sure if the default works but if it does, then great) and android-sdk-platform-tools and android-sdk-build-tools and android-platform

then accept licenses with flutter doctor --android-licenses

then flutter config --android-sdk $ANDROID_SDK_ROOT

Now I could install the emulator I want with that command above in my post and I can list the emulators if I'm not sure what I want with sdkmanager --list


multi-pointer extension for gromit-mpx:
https://www.youtube.com/watch?v=cDRLxoH4G4g
https://github.com/bk138/gromit-mpx

bootable usb:
yay -S popsicle

mono framwework:
yay -S mono

.Net framework:
yay -S dotnet-runtime dotnet-sdk

https://frontpagelinux.com/tutorials/17-kde-plasma-features-that-you-didnt-know-about/

kde-plasma DE install:
# minimalist
yay -S plasma
# more pre-installs
yay -S plasma-desktop

kde graphical login:
yay -S sddm
sudo systemctl enable --now sddm.service

kde plasma shortcuts pkg:
yay -S krunner

kde plasma addons:
yay -S kdeplasma-addons

kde audio:
yay -S plasma-pa

txt or shell file text editor:
yay -S gedit

kde software center:
plasma-discover --listbackends
one of the required packages is needed is packagekit-qt5 

kde music player
yay -S elisa

kde network manager:
yay -S plasma-nm
Then check status with systemctl status NetworkManager.service
and enable & start if needed:
systemctl enable NetworkManager.service
systemctl start NetworkManager.service

kde task manager:
yay -S ksysguard is one option
another option is yay -S plasma-meta
You should not need both (just pick one to save space)

CRON:
yay -S cronie
sudo systemctl enable cronie.service --now
if you want vim and it isn't linked to the crontab by default, then type sudo ln -s /usr/bin/vim /usr/bin/vi
OR
type 'export VISUAL="vim"' inside .bashrc

NodeJs:
yay -S nodejs npm

tree:
yay -S tree

list all linux users:
https://linuxhandbook.com/linux-list-users/
compgen -u

postgresql:
yay -S postgresql
switch to postgres user in terminal with "sudo -u postgres -i"
type initdb --locale $LANG -E UTF8 -D '/var/lib/postgres/data'
then exit back to your own username
sudo systemctl enable postgresql.service
sudo systemctl start postgresql.service
now you can go back to postgres user with "sudo -u postgres -i" and create your databases

view an image via terminal:
install feh (yay -S feh)
and type "feh [image_file]"

kde calculator:
yay -S kcalc

free pdf editor:
yay -S masterpdfeditor-free

record audio:
yay -S audio-recorder
OR
yay -S gnome-sound-recorder


record screen:
yay -S simplescreenrecorder


mp3 player with different speeds available:
yay -S playitslowly



